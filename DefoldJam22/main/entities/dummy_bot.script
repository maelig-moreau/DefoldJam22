go.property("verticalMove", false)
go.property("amplitude", 0)

function init(self)
	self.feedbackCD = 0
	self.hp = 5
	msg.post("/score_manager", "add_mob")
	local property = "position.x"
	if self.verticalMove then 
		go.animate(go.get_id(), "position.y" ,go.PLAYBACK_LOOP_PINGPONG,go.get_position().y + self.amplitude,
		go.EASING_OUTQUAD,self.amplitude/5)
	else
		go.animate(go.get_id(), "position.x" ,go.PLAYBACK_LOOP_PINGPONG,go.get_position().x + self.amplitude,
		go.EASING_OUTQUAD,self.amplitude/5)
	end
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		print(message.other_group)
		if message.other_group == hash("projectile") then
			
		end
	elseif message_id == hash("damage") then
		self.hp = self.hp - message.damage
		if self.hp <= 0 then
			msg.post("/score_manager", "dead_mob")
			msg.post("/score_manager", "gain_score",{amount=150,pos=go.get_position()})
			go.delete()
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
