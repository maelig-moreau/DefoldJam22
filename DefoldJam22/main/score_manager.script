function init(self)
	self.scores = {}
	mobCount = 0
	print(msg.url())
	playerScore = 0
	self.previousScoring = 0
	self.multiplier = 0
end

function final(self)
	
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function del_score(self)
	go.delete(self.scores[1])
	table.remove(self.scores,1)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("gain_score") then
		-- style bonus
		if self.previousScoring ~= message.amount and 150 ~= message.amount then
			self.multiplier = self.multiplier + 1
			msg.post("main_menu:/HUD#scoring", "style",{increase=true,style=self.multiplier})
		elseif self.multiplier > 0 and 150 ~= message.amount then
			self.multiplier = self.multiplier - 1
			msg.post("main_menu:/HUD#scoring", "style",{increase=false,style=self.multiplier})
		end
		self.previousScoring = message.amount
		-- Visuals
		local score = message.amount
		score = score*(self.multiplier/8)
		local floater = factory.create("#factory")
		playerScore = playerScore + message.amount
		go.set_position(message.pos,floater)
		table.insert(self.scores,floater)
		go.animate(floater, "rotation", go.PLAYBACK_ONCE_FORWARD, vmath.quat(0, 0, 0.1, 0), go.EASING_OUTQUAD, 0.8)
		go.animate(floater, "position.y", go.PLAYBACK_ONCE_FORWARD, message.pos.y+50, go.EASING_OUTQUAD, 0.8,0,del_score)
		go.animate(floater, "position.x", go.PLAYBACK_ONCE_FORWARD, message.pos.x+math.random(-200,200), go.EASING_OUTQUAD, 0.8,0)
		go.animate(floater, "scale.x", go.PLAYBACK_ONCE_FORWARD, 0.6, go.EASING_LINEAR, 0.8)
		local text_socket = msg.url(floater).socket
		local text_path = msg.url(floater).path
		local text_fragment = "label"
		local text_url = msg.url(text_socket,text_path,text_fragment)
		label.set_text(text_url, ""..message.amount)
	elseif message_id == hash("add_mob") then
		mobCount = mobCount + 1
	elseif message_id == hash("dead_mob") then
		mobCount = mobCount - 1
		if mobCount <= 0 then
			msg.post("main_menu:/loader#main_menu", "next_level")
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
