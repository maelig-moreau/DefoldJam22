go.property("speed", "5")

function init(self)
	CELL_SIDE = 25
	msg.post(".","acquire_input_focus")
	self.buffer = nil
	self.currentMovement = vmath.vector3(0,0,0)
	self.moving = false
	self.speed = 5
	self.facingRight = true
	self.grounded = true
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

local function move_finished(self)
	self.overrideProtection = false
	if self.buffer == nil then
		self.moving = false
	else
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, self.buffer, go.EASING_LINEAR, 0.1,0,move_finished)
	end
	
end

local function call_move(self,target)
	if self.moving then
		self.buffer = target
		go.set_position(target,go.get_id("/visual_buffer"))
	else
		self.moving = true
		self.buffer = nil
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, target, go.EASING_LINEAR, 0.1,0,move_finished)
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	local pPos = go.get_position()
	
	if action.pressed or self.overrideProtection == false then
		print(action_id)
		if action_id == hash("left") then
			self.overrideProtection = false
			local target = vmath.vector3(pPos.x - CELL_SIDE,pPos.y,0)
			call_move(self, target)
			self.facingRight = false
		elseif action_id == hash("right") then
			self.overrideProtection = false
			local target = vmath.vector3(pPos.x + CELL_SIDE,pPos.y,0)
			call_move(self, target)
			self.facingRight = true
		end
	end
	
	if action_id == hash("jump") and self.grounded then
		self.overrideProtection = true
		local target = vmath.vector3(pPos.x - CELL_SIDE,pPos.y+CELL_SIDE*2,0)
		if self.facingRight then
			target.x = pPos.x + CELL_SIDE
		end
		call_move(self, target)
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
