go.property("speed", "5")

local function grid_to_real(vector3)
	local newvect = vmath.vector3(0,0,0)
	newvect.x = vector3.x * CELL_SIDE
	newvect.y = vector3.y * CELL_SIDE
	return newvect
end

local function real_to_grid(vector3)
	local newvect = vmath.vector3(0,0,0)
	newvect.x = math.ceil(vector3.x / CELL_SIDE)
	newvect.y = math.ceil(vector3.y / CELL_SIDE)
	return newvect
end


function init(self)
	CELL_SIDE = 25
	msg.post(".","acquire_input_focus")
	self.fairy = nil
	self.currentMovement = vmath.vector3(0,0,0)
	self.moving = false
	self.speed = 5
	self.facingRight = true
	self.gridCoords = vmath.vector3(5,5,0)
	go.set_position(grid_to_real(self.gridCoords))
end

local function is_grounded(self)
	-- will contain all verifications needed in the future
	local bool = true
	if go.get_position().y > 50 then bool = false end
	return bool
end

local function move_finished(self)
	self.overrideProtection = false
	self.moving = false
	self.fairy = nil
end

local function move_fairy(self,target)
	if is_grounded(self) == false then
		target.y = target.y - 1
	end
	self.fairy = target
	go.set_position(grid_to_real(target),go.get_id("/visual_buffer"))
end

function update(self, dt)
	if self.moving == false and self.fairy ~= nil then
		print("move finihed",self.fairy)
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, grid_to_real(self.fairy), go.EASING_LINEAR, 0.1,0,move_finished)
		self.moving = true
	end
end

function on_message(self, message_id, message, sender)
	
end

function on_input(self, action_id, action)
	local pPos = go.get_position()
	if (action.pressed or self.overrideProtection == false) then
		if action_id == hash("left") then
			self.overrideProtection = false
			--local target = vmath.vector3(pPos.x-CELL_SIDE,pPos.y,0)
			local gridPos = real_to_grid(go.get_position())
			local target = vmath.vector3(gridPos.x-1,gridPos.y,0)
			move_fairy(self, target)
			self.facingRight = false
		elseif action_id == hash("right") then
			self.overrideProtection = false
			local gridPos = real_to_grid(go.get_position())
			local target = vmath.vector3(gridPos.x+1,gridPos.y,0)
			move_fairy(self, target)
			self.facingRight = true
		end
	end
	
	if action_id == hash("jump") and is_grounded(self) then
		self.overrideProtection = true
		local gridPos = real_to_grid(go.get_position())
		local target = vmath.vector3(gridPos.x,gridPos.y+3,0)
		move_fairy(self, target)
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
